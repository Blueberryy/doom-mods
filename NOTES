## Roadmap

### Indestructable

Slomo option instead of timestop?

### 0.9.x

- scavenge lead probabalistic below 100hp & for ammo that produces low amounts
  - something like: ammo count = (base ammo count * 0.1 * target health/100)
- menuing crash when opening the menu just after leveling up?

### 0.10.x?

- split laevis into its own mod

### Soon

- Revivification should summon copies of the dead enemy and/or friendly lightning constructs rather than reviving the enemy in place

### Someday

- refund 50% XP on level rejection?
- investigate use of A_SetTics() instead of freeze powerup for Swiftness
- add ammo capacity upgrade
  - walk player inventory and boost the MaxAmount and BackpackMaxAmount
  - requires OnApply support, probably
  - won't affect ammo types the player doesn't have yet
  - will be a player mod, so it should either be fairly powerful or get more powerful with time
  - we can use GetDefaultByType(ammoitem).MaxAmount to compute the base max amount
    and then confer bonuses based on that
- investigate embrittlement instakill proccing earlier than it should; observed offing a 3000hp enemy at 1300hp
  - might be working as intended
- thunderbolt should be easier to trigger? Alex can't trigger it at all with one level and a pistol against a pinky


### Eventually?

- per-state overrides in BONSAIRC, e.g. "if the weapon is in this state, treat it as this other weapon instead"
- allow per-state overrides to create virtual weapons for cases where there is no underlying real weapon, like the Ashes boot knife
- allow tracking primary and alt fire separately, probably using state overrides to tell it which states count as which

### ideas from retronutcase

First off, this is an absolutely solid mod. LOVE IT! There's definitely some things I think it could use, tweak wise, but that's just me, so take anything I say with a grain of salt, these are just my thoughts, I'm not gonna hound you over these ideas or anything.

-The fact things like Submunitions and Fragmentation can proc elemental effects from the get go makes them obscenely powerful for element purposes. I feel like they should require a rare weapon upgrade to be able to proc elemental effects.

-I am not 100% sure on this, but can Submunitions that kill an enemy trigger more submunitions? If so, this feels like it should also require a rare upgrade to actually allow for it. Something like "Chain Reaction: Allows death explosions and submunitions to trigger their effects on enemies they kill."

On another note, maybe to spice things up, offer upgrades that come with upsides and downsides? Some examples of what I mean:

-Superdense: Adds 50% more damage to projectile weapons, but also inflicts a 25% speed penalty in exchange per level.

-HP Ammo: Adds 50% more damage to hitscan weapons, but they now fire projectiles (They cannot gain projectile based upgrades however). Further upgrades increase weapon spread by 25% per level.

-Big Spender: The weapon gains 50% more damage, but its ammo cost is doubled. Both bonuses are doubled on future level ups: 100% more damage and 4x ammo cost, 200% more damage but 8x ammo cost, etc.

Also, I feel like we could use some more common type upgrades to balance out the really strong ones like Submunitions and Fragmentation. I admit, I dunno how feasible these would be for a universal system

-Reduced Spread: Reduces spread of hitscan weapons by 10% per level. Caps at level 5.

-Increased Fire Rate: Increase weapon rate of fire by 10% per level. I admit I dunno how easy this to implement with the universal upgrade style you're aiming for.

-Critical Hit: 10% chance to increase weapon damage by 50% when firing. Unlocks Critical Damage and Critical Chance upgrades which further improve these. Critical chance is +5% chance per level, caps at level 8. Critical Damage increases the damage bonus by 5% per level and caps at level 10.

-Critical Gamble: Reduces non critical damage by by 50%, but boosts Critical Chance by 5% per level, and Critical Damage by 10% per level. Caps at Level 5.

-Suppressor: Reduces weapon noise and distance per level. At level 5, the weapon becomes completely silent.

-Free Shot: 5% chance to not consume ammo per level, caps at level 10.

There's definitely potential for more variety in character upgrades too, I think:

-Better Healing: +1 Health from Health Bonuses, +5 Health from Stimpacks, +10 Health from Medkits per level. Caps at Level 5. Rare upgrade

-Charged Shots: When not firing, the damage of your next shot increases over time. Starts at 50% with a 25% damage gain per second. Upgrades increase max charge and charge rate by 25% per level. Rare uipgrade.

-Stronger Armor: Adds +5% to green armor protection value and +10% blue armor protection value per level. rare upgrade.

-Sneak Attack: Adds 50% damage when striking an unaware enemy. Damage increases by 12.5% per level, caps at level 4. Rare upgrade.

Also, is there any way one could add overrides to the upgrade list for specific weapons? In case a certain weapon just ends up being TOO good with certain upgrades? (Looking at the MetaDoom EKG pistol, which is way too easy to make overpowered for a basic pistol, give this thing some piercing, fragmentation, and submunitions and becomes way too beastly for a low end gun)

Anyway, regardless of if these ideas have any merit and end up being something you can use, I'm looking forward to seeing where this mod goes! :)

### Later

- BONSAIRC support for binding specific weapon *states* to other weapons?
- general purpose pluggable XP sources for e.g. currency in mods that have it?

Remaining upgrades:
- Ignition
- max health increase
- Shoryuken
- explosive fragmentation
- micromissiles -- projectiles turn into micromissile swarms after a few tics of flight. How do we compute damage?

Gameplay changes:
- do another pass over the prerequisites. Graph paper? submunitions/expldeath should mutex, for example
- add "eat weapons to gain their power" feature to LD integration

Internal changes:
- factor out some shared code like "spawn a helper actor and set its target pointer appropriately", "spawn an expanding ring of particle effects", "do something to everything within a given radius", etc.

UI changes:
- Pointing at an enemy should show you how many stacks of each debuff it has. We can
  use AimTarget to get the target under cursor. Note that AimTarget is play scope, so
  we can't call it from ui, I think.

Structural changes:
- split Laevis (legendoom integration) & Gun Bonsai (weapon leveling) into separate mods

## Splitting Laevis into its own mod

Laevis features:
- eat LD weapons to add their powers to your own weapon
- switch between powers

Gun Bonsai features:
- leveling up LD weapons adds new powers

## Damage numbers

http://www.doom2.net/single/weaponfaq.html has some useful values for attack rates, DPS, etc that can be used for balancing.

DPS: 22/88, 25, 68/147, 88, 159+220, 263
RPM: 120/480, 150, 58/42, 530, 106, 700

I really need to implement softcap support!

20% damage -> stacks with 35 stacks/second decay == 175 dps for steady state
5 stacks/second decay (using TickDot()) -> 25 dps for steady state

# Implementation notes for doing it as an addon to LD

## LD architecture notes

Using Pistol here for illustration, but other weapons follow the same pattern.

Legendoom adds LDPistol as the weapon in hand and LDPistolPickup as the item on ground. There's also LDPistolPickupLegendary for the legendary version (which gets a random effect when spawned, by giving it an LDPistolRandomLegendary item), and LDPistolPickupDroppedLegendary, which is the version used when dropped from your inventory and is the same except without getting the random effect on spawn.

Effects are stored in the player's inventory:
- LDPistolEffectActive shows that you have a legendary pistol
- LDPistolLegendary(Common|Uncommon|Rare|Epic) shows what rarity it is
- LDPistolEffect_Foo shows that you have effect Foo on the pistol

When you pick up an LDPistolPickupLegendary, the effects in it are transferred to the player, because it has the +INVENTORY.TRANSFER flag set.

When you drop a weapon, and you have the PistolEffectActive effect in inventory:
- it spawns an LDPistolPickupDroppedLegendary item
- it gives it copies of LDPistolEffectActive, LDPistolLegendary$RARITY, and the *first* LDPistolEffect_* effect it finds in your inventory
- it clears all LDPistol forces from your inventory
This means the rarity will be carried over correctly but only the first special ability will stick to it.

Specifically:
- check if you have LDPistolEffectActive
  - if not, drop a normal pistol
- spawn an LDPistolPickupDroppedLegendary item
- wait one tic
- do the copy described above
- spawn the remover

pThe spawned item waits FOUR tics before clearing the parent/child relationship with the player, so we can have our new remover move everything over.

## LVLD handlers and stuff

On damage:
- increment player XP
  - if >= level threshhold, increment level, apply level-up bonus, subtract level threshold from XP and set new threshold
- increment weapon XP
  - if >= level threshold, increment level, subtract threshold from XP, set new threshold, and maybe give bonus (see below)

To give bonus:
- if the weapon is basic and already has an effect:
  - do nothing
- choose a random effect appropriate to the weapon rarity (maybe we can give LDPistolRandomLegendary to a temporary actor and see what items it ended up with, rerolling if we get something too good for the item?)
- if the effect is a duplicate of one we already have:
  - reroll
- if it's mutually exclusive with one we already have:
  - ask which one to keep
  - if they answer "the old one", do nothing
  - if they answer "the new one", remove the old one from their inventory and add the new one
- if the number of effects they have exceeds the number of slots for that weapon:
  - list all effects for that weapon and ask which one they want to keep
  - see mutual exclusion above
- else give them the effect

On drop weapon:
- BEFORE the remover goes and removes all the effects, copy ALL of the effects into the dropped weapon
  Maybe we can do this by subclassing the weapons and overriding the RemoveWeapon state so that we go through and copy all the things before it spawns the remover? Or by replacing the remover

## Player-level upgrades

- max health
- life/armour regeneration out of combat?

## Weapon-level upgrades

These all have to be possible without subclassing, so this is kind of spitballing; some of these may not be feasible to implement.
I think that we have access to the projectile at creation time (via WorldThingSpawned) and the projectile/puff at damage time (via ModifyDamage and/or WorldThingDamaged).

Basic "number go up" upgrades:
- knockback
  weapon kickback & projectilekickback property
  will need some tuning (a value of 500 gives noticeable but not excessive kickback to the pistol)
  needs to be applied before the gun fires, so we need some kind of ApplyUpgradesToWeapon(wpn)
  call we can call after LevelUp

More complicated upgrades:
- AoE stun
  Use A_Explode and then have a custom damage handler? Spawn some kind of explosion actor?
- submunitions in flight
  Spawn() or use A_ThrowGrenade(), needs custom class definition for submunition
- submunitions on impact
  as above
- turns enemies into friends
  set FRIENDLY flag when damage threshold reached or w/e

Upgrades inspired by DoomRL:
- increase max health
- increased speed
- berserk after successful hits/kills
- show secrets/monsters/items/etc on map
- damage type modifications (e.g. shrapnel -> AP)
- damage resistance while firing
